---
import type { MarkdownHeading } from "astro";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";

import FormattedDate from "@/components/FormattedDate.astro";
import Giscus from "@/components/Giscus.astro";
import TableOfContents from "@/components/TableOfContents.astro";
import { Badge } from "@/components/ui/badge";
import { ScrollArea } from "@/components/ui/scroll-area";
import { generateToC } from "@/lib/toc";
import { cn } from "@/lib/utils";
import BaseLayout from "./BaseLayout.astro";

import "katex/dist/katex.min.css";
import "remark-github-alerts/styles/github-base.css";
import "remark-github-alerts/styles/github-colors-dark-class.css";
import "remark-github-alerts/styles/github-colors-light.css";

type Props = CollectionEntry<"blog">["data"] & { headings?: MarkdownHeading[] };

const {
  title,
  description,
  draft,
  pubDate,
  updatedDate,
  categories,
  tags,
  headings,
  cover,
} = Astro.props;

const toc = generateToC(headings ?? [], {
  minHeadingLevel: 1,
  maxHeadingLevel: 3,
});
---

<BaseLayout title={title} description={description}>
  <slot name="head" slot="head" />
  <div class="mx-auto max-w-6xl">
    <main
      class={cn(
        "relative py-6 lg:grid lg:gap-10 lg:py-10 xl:gap-20 max-w-screen",
        headings && "lg:grid-cols-[1fr_300px]",
      )}
    >
      <div class="mx-auto w-full min-w-0">
        <div class="prose">
          <article data-pagefind-body>
            {cover && <Image src={cover} alt="cover" class="mb-6" />}
            <div class="title">
              <h1
                data-pagefind-meta="title"
                class="mt-0 mb-4 text-4xl leading-none"
              >
                {title}
              </h1>
              <div class="text-muted-foreground mb-2 text-sm">
                Published on <FormattedDate
                  date={pubDate}
                  data-pagefind-meta="date"
                />
                {
                  updatedDate && (
                    <>
                      Â· Last updated on <FormattedDate date={updatedDate} />
                    </>
                  )
                }
              </div>
              <div class="mb-4">
                {draft && <Badge>DRAFT</Badge>}
                {
                  categories?.map((category) => (
                    <>
                      <Badge
                        variant="secondary"
                        data-pagefind-filter="category"
                      >
                        {category}
                      </Badge>
                    </>
                  ))
                }
                {
                  tags?.map((tag) => (
                    <>
                      <Badge variant="outline" data-pagefind-filter="tag">
                        #{tag}
                      </Badge>
                    </>
                  ))
                }
              </div>
            </div>
            <slot />
          </article>
          <slot name="foot" slot="foot" />
          <Giscus />
        </div>
      </div>
      {
        headings && (
          <div class="hidden text-sm xl:block">
            <div class="sticky top-16 -mt-10 h-[calc(100vh-3.5rem)] pt-16">
              <ScrollArea className="h-full pb-10">
                <nav class="space-y-2">
                  <p class="font-medium">On This Page</p>
                  <TableOfContents toc={toc} />
                </nav>
              </ScrollArea>
            </div>
          </div>
        )
      }
    </main>
  </div>
</BaseLayout>
