---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import type { GetStaticPaths, Page } from "astro";

import FormattedDate from "@/components/FormattedDate.astro";
import PagePagination from "@/components/PagePagination.astro";
import Website from "@/components/structured-data/WebSite.astro";
import { Badge } from "@/components/ui/badge";
import BaseLayout from "@/layouts/BaseLayout.astro";

export const getStaticPaths: GetStaticPaths = async ({ paginate }) => {
  const posts = (
    await getCollection("blog", ({ data }) =>
      import.meta.env.PROD ? !data.draft : true,
    )
  ).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

  return paginate(posts, { pageSize: 10 });
};

type Props = {
  page: Page<CollectionEntry<"blog">>;
};

const { page } = Astro.props;
---

<BaseLayout>
  {page.currentPage === 1 && <Website slot="head" />}
  {page.url.next && <link rel="next" href={page.url.next} slot="head" />}
  {page.url.prev && <link rel="prev" href={page.url.prev} slot="head" />}
  <div class="prose py-6">
    <section>
      <ul class="m-0 list-none space-y-10">
        {
          page.data.map((post) => (
            <li>
              <div class="flex">
                <p class="text-muted-foreground flex-1 text-sm">
                  <FormattedDate date={post.data.pubDate} />
                </p>
                <div>
                  {post.data.draft && <Badge>DRAFT</Badge>}
                  {post.data.categories?.map((category) => (
                    <>
                      <Badge
                        variant="secondary"
                        data-pagefind-filter="category"
                      >
                        {category}
                      </Badge>
                    </>
                  ))}
                </div>
              </div>
              <a href={`/posts/${post.id}/`}>
                <h4 class="title">{post.data.title}</h4>
              </a>
              <p class="description">{post.data.description ?? ""}</p>
            </li>
          ))
        }
      </ul>
    </section>
  </div>
  <PagePagination page={page} />
</BaseLayout>

<style>
  @reference "@/styles/global.css";

  a {
    @apply no-underline! opacity-80! hover:opacity-100! hover:transition!;
  }

  .title {
    @apply mt-0! no-underline!;
  }

  .description {
    @apply text-muted-foreground! mt-2! line-clamp-4! text-base!;
  }
</style>
