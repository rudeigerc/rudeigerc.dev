---
import { type CollectionEntry, getCollection, render } from "astro:content";
import type { GetStaticPaths } from "astro";

import BlogPosting from "@/components/structured-data/BlogPosting.astro";
import BlogPost from "@/layouts/BlogPost.astro";
import Pagination from "@/components/Pagination.astro";

export const getStaticPaths: GetStaticPaths = async () => {
  const posts = (
    await getCollection("blog", ({ data }) =>
      import.meta.env.PROD ? !data.draft : true
    )
  ).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

  return posts.map((post, index) => ({
    params: {
      slug: post.id,
    },
    props: {
      prev:
        index > 0
          ? {
              href: `/posts/${posts[index - 1].id}`,
              label: posts[index - 1].data.title,
            }
          : {},
      next:
        index < posts.length - 1
          ? {
              href: `/posts/${posts[index + 1].id}`,
              label: posts[index + 1].data.title,
            }
          : {},
      ...post,
    },
  }));
};

type Props = CollectionEntry<"blog"> & {
  prev: { href: string; label: string };
  next: { href: string; label: string };
};

const post = Astro.props;

const { Content, headings } = await render(post);
---

<BlogPost {...post.data} headings={headings}>
  <BlogPosting slot="head" {...post.data} />
  <Content />
  <Pagination slot="foot" pagination={{ prev: post.prev, next: post.next }} />
</BlogPost>
